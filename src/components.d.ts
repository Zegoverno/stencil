/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "name": string;
    }
    interface AppRoot {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface NiceNice {
    }
    interface NiceNone {
    }
    interface SecondComponent {
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLNiceNiceElement extends Components.NiceNice, HTMLStencilElement {
    }
    var HTMLNiceNiceElement: {
        prototype: HTMLNiceNiceElement;
        new (): HTMLNiceNiceElement;
    };
    interface HTMLNiceNoneElement extends Components.NiceNone, HTMLStencilElement {
    }
    var HTMLNiceNoneElement: {
        prototype: HTMLNiceNoneElement;
        new (): HTMLNiceNoneElement;
    };
    interface HTMLSecondComponentElement extends Components.SecondComponent, HTMLStencilElement {
    }
    var HTMLSecondComponentElement: {
        prototype: HTMLSecondComponentElement;
        new (): HTMLSecondComponentElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "my-component": HTMLMyComponentElement;
        "nice-nice": HTMLNiceNiceElement;
        "nice-none": HTMLNiceNoneElement;
        "second-component": HTMLSecondComponentElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "name"?: string;
    }
    interface AppRoot {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface NiceNice {
    }
    interface NiceNone {
    }
    interface SecondComponent {
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "my-component": MyComponent;
        "nice-nice": NiceNice;
        "nice-none": NiceNone;
        "second-component": SecondComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "nice-nice": LocalJSX.NiceNice & JSXBase.HTMLAttributes<HTMLNiceNiceElement>;
            "nice-none": LocalJSX.NiceNone & JSXBase.HTMLAttributes<HTMLNiceNoneElement>;
            "second-component": LocalJSX.SecondComponent & JSXBase.HTMLAttributes<HTMLSecondComponentElement>;
        }
    }
}
